name: Build and Security Scan

on: [push, pull_request]

jobs:
  build-and-scan:
    runs-on: arc-runner-set

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Install libcurl4-openssl-dev 
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev -y
        sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev jq -y
        # You can add more package installations here if needed
        
    - name: Set up R
      uses: r-lib/actions/setup-r@v2.3.1
      with:
        r-version: 4.3.2  # Specify your desired R version

    - name: Install Dependencies
      run: |
        Rscript -e "install.packages(c('textshaping', 'curl', 'targets', 'futile.logger', 'conflicted', 'remotes', 'shiny', 'tidyverse', 'cyclocomp', 'xml2', 'knitr', 'digest', 'glue', 'backports', 'rex'), repos='http://cran.us.r-project.org')"
        # Add more package installations as needed
        
    - name: Install lintr
      run: |
        Rscript -e "install.packages('lintr', repos='http://cran.us.r-project.org')"
       
    - name: Run lintr
      run: |
        Rscript -e 'lintr::lint_package()'
        
    - name: Run R Script
      run: |
        Rscript matrix.R 
        
    - name: Run CVE Scanning with Grype
      run: |
        docker run --rm -v ${{ github.workspace }}:/src anchore/grype /src -o json > cve-output.json
      
    - name: Create SBOM from CVE output
      run: |
        jq -c '. | map({name: .artifact.name, version: .artifact.version})' cve-output.json > sbom.json
      
    - name: Upload SBOM from CVE output
      uses: actions/upload-artifact@v4.3.1
      with:
        name: cve-sbom
        path: sbom.json
        
    - name: Scan SBOM
      uses: anchore/scan-action@v3
      with:
        sbom: sbom.json
        fail-build: false
        output-format: json
        severity-cutoff: high
        
    - name: Upload CVE Output
      uses: actions/upload-artifact@v4.3.1
      with:
        name: cve-output
        path: cve-output.json
